version: 2.1

# Orb declarations
orbs:
  win: circleci/windows@2.4.0

# Simple YAML anchors
aliases:
  - &project_dir "~/project"

commands:
  write-key:
    description: "Fetch access token from staging playground"
    steps:
      - run:
          name: Parse
          command: |
            echo $PRIVATE_KEY > ~/assets/jwtRS256.key
  flutter-tests:
    description: "Run flutter tests"
    steps:
      - run:
          name: command to run flutter tests
          command: |
            flutter test --machine > test-results/flutter-demo-app-tests/flutter_demo_app_all_tests-report.json
            $HOME/.pub-cache/bin/tojunit --input test-results/flutter-demo-app-tests/flutter_demo_app_all_tests-report.json --output test-results/flutter-demo-app-tests/flutter_demo_app_all_tests-report.xml
  dependencies:
    description: "Download dependencies and setup global packages"
    parameters:
      shell:
        type: string
        default: "/bin/bash --login -eo pipefail"
        description: "End script immediately if any command exists with a non-zero status or if any pipe exits with a non-zero status."
      pub-cache:
        type: string
        default: "~/.pub-cache"
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1.4-dependencies-{{ arch }}-{{ checksum "pubspec.lock" }}
            - v1.4-dependencies-{{ arch }}-
      - run:
          name: Download deps
          shell: << parameters.shell >>
          command: flutter pub get
      - run:
          name: Get junitreporter
          shell: << parameters.shell >>
          command: |
            pub global activate junitreport
            export PATH="$PATH":"$HOME/.pub-cache/bin"
      - save_cache:
          key: v1.4-dependencies-{{ arch }}-{{ checksum "pubspec.lock" }}
          paths:
            - .dart_tool
            - << parameters.pub-cache >>

workflows:
  test-and-build:
    jobs:
      - test
jobs:
  test:
    docker:
      - image: cirrusci/flutter:stable
    steps:
      - dependencies:
          shell: "/bin/bash -eo pipefail"
      - run:
          name: Make folder for test results
          command: mkdir -p test-results/flutter-demo-app-tests
      - write-key
      - flutter-tests
      - store_test_results:
          path: test-results